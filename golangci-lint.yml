# A modified version of the Maratori "golden config", tuned for a learning project.

version: "2"

issues:
  max-same-issues: 50

# NOTE: The formatters section from the original file is not needed,
# as the 'goimports' linter in the 'linters' section handles formatting.

linters:
  enable:
    # --- Core & High-Value Linters (Kept Enabled) ---
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - copyloopvar # Essential for Go 1.22+
    - depguard # Very useful for managing dependencies
    - dupl
    - durationcheck
    - errcheck # Absolutely critical
    - errorlint # Critical for modern error handling
    - goimports # Handles formatting and imports
    - gosimple # Part of staticcheck suite
    - govet # Core Go tool
    - ineffassign
    - rowserrcheck
    - gosec # Security is always important
    - staticcheck # A suite of incredibly powerful checks
    - typecheck
    - unused
    - whitespace

    # --- Good Style & Practice Linters (Kept Enabled) ---
    - cyclop
    - goconst
    - gocritic
    - gocyclo
    - nakedret
    - noctx
    - nolintlint # Enforces good `nolint` hygiene
    - predeclared
    - revive # Replaces golint, good defaults
    - sqlclosecheck
    - unconvert
    - unparam

    # --- Linters Temporarily Disabled for Learning ---
    # These are excellent but can be too noisy or opinionated when starting out.
    # We can re-enable these later as the project matures.

    # - exhaustruct # V. noisy. Requires every field of every struct to be filled in literals.
    # - gochecknoglobals # Too strict for now. We might use some package-level variables.
    # - gochecknoinits # Too strict. The init() function is a valid tool in Go.
    # - godoclint # Requires perfect godoc comments on everything. Let's focus on code first.
    # - godot # Requires all comments to end in a period.
    # - funlen # Let's not worry about function length just yet.
    # - mnd # Magic Number Detector. Can be noisy during initial development.
    # - nonamedreturns # A stylistic choice. We will use them where appropriate.
    # - revive # Disabling the very strict comment rules from revive for now. (See settings below)
    # - wrapcheck # Great linter, but forces wrapping on almost every error, which can be overkill initially.

linters-settings:
  # CRITICAL: You must change this to your project's module path!
  goimports:
    local-prefixes: github.com/KhooLayHan/movies-api

  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/golang/protobuf"
            desc: "Use google.golang.org/protobuf instead."
          - pkg: "github.com/satori/go.uuid"
            desc: "Use github.com/google/uuid instead."

  # We keep 'revive' enabled, but we disable its strictest stylistic rules.
  # This gives us the power of revive without the noise.
  revive:
    rules:
      - name: comment-sentinel
        disabled: true
      - name: exported
        disabled: true
      - name: package-comments
        disabled: true

  # Relaxing this for now. We can be stricter later.
  gocyclo:
    min-complexity: 15
